<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit4cf76a01146585a6fa94f931287b3fc0
=======
class ComposerAutoloaderInitc84a10cbd72eaec480375f5bdd0c371f
>>>>>>> 888d98d126732a9138949e8b889be12e0d85fcbc
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit4cf76a01146585a6fa94f931287b3fc0', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit4cf76a01146585a6fa94f931287b3fc0', 'loadClassLoader'));

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->set($namespace, $path);
        }

        $map = require __DIR__ . '/autoload_psr4.php';
        foreach ($map as $namespace => $path) {
            $loader->setPsr4($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
=======
        spl_autoload_register(array('ComposerAutoloaderInitc84a10cbd72eaec480375f5bdd0c371f', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitc84a10cbd72eaec480375f5bdd0c371f', 'loadClassLoader'));

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

            call_user_func(\Composer\Autoload\ComposerStaticInitc84a10cbd72eaec480375f5bdd0c371f::getInitializer($loader));
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
>>>>>>> 888d98d126732a9138949e8b889be12e0d85fcbc
        }

        $loader->register(true);

<<<<<<< HEAD
        $includeFiles = require __DIR__ . '/autoload_files.php';
        foreach ($includeFiles as $fileIdentifier => $file) {
            composerRequire4cf76a01146585a6fa94f931287b3fc0($fileIdentifier, $file);
=======
        if ($useStaticLoader) {
            $includeFiles = Composer\Autoload\ComposerStaticInitc84a10cbd72eaec480375f5bdd0c371f::$files;
        } else {
            $includeFiles = require __DIR__ . '/autoload_files.php';
        }
        foreach ($includeFiles as $fileIdentifier => $file) {
            composerRequirec84a10cbd72eaec480375f5bdd0c371f($fileIdentifier, $file);
>>>>>>> 888d98d126732a9138949e8b889be12e0d85fcbc
        }

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequire4cf76a01146585a6fa94f931287b3fc0($fileIdentifier, $file)
=======
function composerRequirec84a10cbd72eaec480375f5bdd0c371f($fileIdentifier, $file)
>>>>>>> 888d98d126732a9138949e8b889be12e0d85fcbc
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        require $file;

        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
    }
}
